// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HtmlContent /> should match snapshot 1`] = `
.c0 {
  font-size: calc(1.6rem + 0.2rem);
  line-height: 1.5;
}

.c0 p {
  margin: 1.6rem 0;
}

.c0 a,
.c0 a:visited,
.c0 a:link {
  color: crimson;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c0 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c0 code {
  font-family: monospace;
  color: crimson;
  font-size: 1.6rem;
  background: #DDDDDD;
  padding: 0.2rem;
  margin: 0.2rem;
}

.c0 pre {
  background: #000000;
  padding: 2.4rem;
  font-family: monospace;
  color: #FFFFFF;
  margin: 1.6rem 0;
  width: 100%;
  overflow-x: auto;
  font-size: 1.6rem;
}

.c0 pre code {
  color: inherit;
  background: inherit;
}

.c0 img {
  max-width: 100%;
}

.c0 .image {
  line-height: 0;
  margin: 2.4rem 0;
}

.c0 .image figcaption {
  font-size: 1.6rem;
  padding: 1.6rem;
  text-align: center;
  line-height: 1.3;
}

.c0 .image-style-side {
  max-width: 50%;
  float: right;
  margin: 2.4rem 0;
}

.c0 hr {
  border: none;
  border-bottom: 0.1rem solid #DDDDDD;
}

.c0 ul,
.c0 ol {
  margin: 2.4rem 4.0rem;
}

.c0 .table {
  width: 100%;
  overflow: hidden;
  overflow-x: auto;
}

.c0 table {
  width: 100%;
  border-collapse: collapse;
  margin: 1.6rem 0;
}

.c0 table td,
.c0 table th {
  padding: 1.6rem;
  border: 0.1rem solid #DDDDDD;
}

.c0 blockquote {
  border-left: 0.5rem solid crimson;
  color: #AAAAAA;
  -webkit-filter: brightness(80%);
  filter: brightness(80%);
  padding-left: 2.4rem;
  font-style: italic;
  margin: 2.4rem;
}

@media (max-width:768px) {
  .c0 {
    font-size: 2rem;
  }

  .c0 .image-style-side {
    max-width: 100%;
    float: none;
    margin: 0;
  }
}

<div>
  <div
    class="c0"
  >
    <p>
      We’ll start with some background on the Mac transition and give an overview of Firefox internals that needed to know about the new architecture, before moving on to the concept of Universal Binaries.
    </p>
    <figure
      class="table"
    >
      <table>
        <thead>
          <tr>
            <th>
              Title 1
            </th>
            <th>
              Title 2
            </th>
            <th>
              Title 3
            </th>
            <th>
              Title 4
            </th>
            <th>
              Title 5
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              Content 1
            </td>
            <td>
              Content 2
            </td>
            <td>
              Content 3
            </td>
            <td>
              Content 3
            </td>
            <td>
              Content 3
            </td>
          </tr>
          <tr>
            <td>
              Content 1
            </td>
            <td>
              Content 2
            </td>
            <td>
              Content 3
            </td>
            <td>
              Content 3
            </td>
            <td>
              Content 3
            </td>
          </tr>
          <tr>
            <td>
              Content 1
            </td>
            <td>
              Content 2
            </td>
            <td>
              Content 3
            </td>
            <td>
              Content 3
            </td>
            <td>
              Content 3
            </td>
          </tr>
        </tbody>
      </table>
    </figure>
    <blockquote>
      <p>
        <span
          style="background-color:rgb(255,255,255);color:rgb(0,0,0);"
        >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sagittis nisl sagittis lectus ornare aliquet. Fusce faucibus, ex quis facilisis congue, magna elit congue nulla,
        </span>
      </p>
    </blockquote>
    <p>
       
    </p>
    <figure
      class="image"
    >
      <img
        src="https://source.unsplash.com/random/800x800"
      />
    </figure>
    <p>
       
    </p>
    <figure
      class="image image-style-side"
    >
      <img
        alt="imagem 9"
        src="https://res.cloudinary.com/dr5ot2zqr/image/upload/v1647892277/800x800_a1b3864dfd.jpg"
      />
    </figure>
    <p>
      <span
        style="background-color:rgb(255,255,255);color:rgb(0,0,0);"
      >
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sagittis nisl sagittis lectus ornare aliquet. Fusce faucibus. Imagem ao lado: 
      </span>
       
    </p>
    <p>
       
    </p>
    <p>
       
    </p>
    <p>
      <span
        style="background-color:rgb(255,255,255);color:rgb(0,0,0);"
      >
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sagittis nisl sagittis lectus ornare aliquet. Fusce faucibus, ex quis facilisis congue, magna elit congue nulla, 
      </span>
      Teste de imagem centralizada
    </p>
    <p>
       
    </p>
    <figure
      class="image"
    >
      <img
        alt="imagem 9"
        src="https://res.cloudinary.com/dr5ot2zqr/image/upload/v1647892277/800x800_a1b3864dfd.jpg"
      />
    </figure>
    <p>
      <a
        href="https://google.com.br"
      >
        Teste de link
      </a>
       
    </p>
    <p>
      <span
        style="background-color:rgb(255,255,255);color:rgb(0,0,0);"
      >
        <i>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sagittis nisl sagittis lectus ornare aliquet. Fusce faucibus, ex quis facilisis congue, magna elit congue nulla,
        </i>
      </span>
    </p>
    <p>
      <span
        style="background-color:rgb(255,255,255);color:rgb(0,0,0);"
      >
        <strong>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sagittis nisl sagittis lectus ornare aliquet.
        </strong>
      </span>
    </p>
    <p>
      <code>
        <strong>
          Teste de código asdasd asad
        </strong>
      </code>
    </p>
    <pre>
      <code
        class="language-plaintext"
      >
        import { PostMetadata } from '../../shared-types/postAttributes';
import { ArticleHeader } from '../ArticleHeader';
import { HtmlContent } from '../HtmlContent';
import * as Styled from './styles';

export type PostProps = PostMetadata;

export const Post = ({ attributes }: PostProps) =&gt; {
  return (
    &lt;Styled.Wrapper&gt;
      &lt;ArticleHeader {...attributes} /&gt;
      &lt;Styled.Content&gt;
        &lt;HtmlContent html={attributes.content} /&gt;
      &lt;/Styled.Content&gt;
    &lt;/Styled.Wrapper&gt;
  );
};
      </code>
    </pre>
    <p>
      <strong>
        Teste de vídeo
      </strong>
    </p>
    <iframe
      height="315"
      src="https://www.youtube.com/embed/heRRKDQepy8"
      width="560"
    >
      &lt;/oembed&gt;&lt;/figure" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;
    </iframe>
  </div>
</div>
`;
